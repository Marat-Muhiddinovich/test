{"name": "test_update_product", "status": "broken", "statusDetails": {"message": "ValueError: product_id must be a positive integer", "trace": "api_context = <playwright._impl._fetch.APIRequestContext object at 0x0000015DF8355010>\n\n    def test_update_product(api_context):\n        product_id = 195,\n        update_data = {\n            \"price\": 1799,\n            \"stock\": 30\n        }\n        update_api = UpdateProductAPI(api_context)\n>       response = update_api.update_product(product_id, update_data)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_products.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <api.products_api.UpdateProductAPI object at 0x0000015DF7EB7B60>, product_id = (195,), update_data = {'price': 1799, 'stock': 30}\n\n    def update_product(self, product_id=int, update_data=dict):\n        if not isinstance(product_id, int) or product_id <= 0:\n>           raise ValueError(\"product_id must be a positive integer\")\nE           ValueError: product_id must be a positive integer\n\n..\\api\\products_api.py:89: ValueError"}, "start": 1759752583524, "stop": 1759752583524, "uuid": "eb51df7b-b42e-4bde-80bf-122f6cc031f6", "historyId": "604e58487df1cc857ec98deec619babb", "testCaseId": "604e58487df1cc857ec98deec619babb", "fullName": "tests.test_products#test_update_product", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_products"}, {"name": "host", "value": "PC-2993"}, {"name": "thread", "value": "26452-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_products"}], "titlePath": ["tests", "test_products.py"]}