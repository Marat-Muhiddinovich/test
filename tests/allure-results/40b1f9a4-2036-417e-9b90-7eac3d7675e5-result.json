{"name": "test_limit_products", "status": "failed", "statusDetails": {"message": "AssertionError: assert 3 == 2\n +  where 3 = len({'id': 6, 'price': 49.99, 'title': 'Calvin Klein CK One'})", "trace": "api_context = <playwright._impl._fetch.APIRequestContext object at 0x00000296F7690EC0>\n\n    def test_limit_products(api_context):\n        limit = 5\n        skip = 5\n        select = \"title,price\"\n        limit_api = LimitProductsAPI(api_context)\n        response = limit_api.limit_products(limit, skip, select)\n        assert response.status == 200\n        data = response.json()\n        assert \"products\" in data\n        assert isinstance(data[\"products\"], list)\n        assert len(data[\"products\"]) == limit\n        for product in data[\"products\"]:\n            assert \"title\" in product\n            assert \"price\" in product\n>           assert len(product) == 2\nE           AssertionError: assert 3 == 2\nE            +  where 3 = len({'id': 6, 'price': 49.99, 'title': 'Calvin Klein CK One'})\n\ntest_products.py:66: AssertionError"}, "start": 1759469352448, "stop": 1759469352647, "uuid": "2c0d8e28-a136-49c3-bb54-ef7f1c7058ac", "historyId": "a59c7bce4d1b32ce1e7b3731e18d1a0b", "testCaseId": "a59c7bce4d1b32ce1e7b3731e18d1a0b", "fullName": "tests.test_products#test_limit_products", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_products"}, {"name": "host", "value": "PC-2993"}, {"name": "thread", "value": "7352-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_products"}], "titlePath": ["tests", "test_products.py"]}