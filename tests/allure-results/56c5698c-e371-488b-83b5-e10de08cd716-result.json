{"name": "test_login_valid_credentials", "status": "broken", "statusDetails": {"message": "TypeError: APIRequestContext.post() got an unexpected keyword argument 'token'", "trace": "api_context = <playwright._impl._fetch.APIRequestContext object at 0x000001EB60E5C830>\n\n    @pytest.mark.api\n    def test_login_valid_credentials(api_context):\n        login_api = LoginAPI(api_context)\n>       response = login_api.login(\n            username=\"emilys\",\n            password=\"emilyspass\",\n            expiresInMins=30\n        )\n\ntest_login.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\api\\users_api.py:22: in login\n    return self.post(self.base_endpoint, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <api.users_api.LoginAPI object at 0x000001EB60E5CD70>, endpoint = '/auth/login'\ndata = {'expiresInMins': 30, 'password': 'emilyspass', 'username': 'emilys'}, token = None\n\n    def post(self, endpoint: str, data: dict, token: str = None):\n>       return self.context.post(endpoint, data=data, token=token)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       TypeError: APIRequestContext.post() got an unexpected keyword argument 'token'\n\n..\\api\\api_client.py:9: TypeError"}, "start": 1758625962164, "stop": 1758625962164, "uuid": "8c613ba9-e714-4b3a-afc7-1e4df615d84d", "historyId": "6401541eb30d027215dbf64771ce9e75", "testCaseId": "6401541eb30d027215dbf64771ce9e75", "fullName": "tests.test_login#test_login_valid_credentials", "labels": [{"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "PC-2993"}, {"name": "thread", "value": "3336-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py"]}