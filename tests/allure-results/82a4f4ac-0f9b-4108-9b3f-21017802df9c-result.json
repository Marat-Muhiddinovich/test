{"name": "test_sort_products", "status": "broken", "statusDetails": {"message": "ValueError: sort_by must be a non-empty string", "trace": "api_context = <playwright._impl._fetch.APIRequestContext object at 0x00000289B6C31010>\n\n    def test_sort_products(api_context):\n        sort_by = 10\n        sort_api = SortProductsAPI(api_context)\n>       response = sort_api.sort_products(sort_by)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_products.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <api.products_api.SortProductsAPI object at 0x00000289B6773B60>, sort_by = 10\n\n    def sort_products(self, sort_by=str):\n        if not isinstance(sort_by, str) or not sort_by.strip():\n>           raise ValueError(\"sort_by must be a non-empty string\")\nE           ValueError: sort_by must be a non-empty string\n\n..\\api\\products_api.py:56: ValueError"}, "start": 1759472104624, "stop": 1759472104624, "uuid": "9c55824e-71b2-4eba-ab92-ba0b2f2a7fd1", "historyId": "ecef797401cb2b372568d62f71393c33", "testCaseId": "ecef797401cb2b372568d62f71393c33", "fullName": "tests.test_products#test_sort_products", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_products"}, {"name": "host", "value": "PC-2993"}, {"name": "thread", "value": "7500-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_products"}], "titlePath": ["tests", "test_products.py"]}