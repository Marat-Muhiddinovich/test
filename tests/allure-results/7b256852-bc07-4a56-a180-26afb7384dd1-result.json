{"name": "test_get_user_by_id", "status": "broken", "statusDetails": {"message": "ValueError: user_id must be a positive integer", "trace": "api_context = <playwright._impl._fetch.APIRequestContext object at 0x000001E0CCAFFC80>\n\n    @pytest.mark.api\n    def test_get_user_by_id(api_context):\n        users_api = UserGetByIDAPI(api_context)\n        user_id=-1\n>       response = users_api.get_user_by_id(user_id)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_users_api.py:112: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.users_api.UserGetByIDAPI object at 0x000001E0CCEB10D0>, user_id = -1\n\n    def get_user_by_id(self, user_id=int):\n        if not isinstance(user_id, int) or user_id <= 0:\n>           raise ValueError(\"user_id must be a positive integer\")\nE           ValueError: user_id must be a positive integer\n\n..\\api\\users_api.py:53: ValueError"}, "start": 1759143168687, "stop": 1759143168687, "uuid": "f4c0b0b9-7b29-440a-9fe5-421195cac8ca", "historyId": "3ec43f87416c2bd041efeb5019e120b7", "testCaseId": "3ec43f87416c2bd041efeb5019e120b7", "fullName": "tests.test_users_api#test_get_user_by_id", "labels": [{"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_users_api"}, {"name": "host", "value": "PC-2993"}, {"name": "thread", "value": "12688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_users_api"}], "titlePath": ["tests", "test_users_api.py"]}