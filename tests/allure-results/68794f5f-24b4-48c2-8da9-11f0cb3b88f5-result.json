{"name": "test_login_invalid_credentials", "status": "broken", "statusDetails": {"message": "TypeError: APIRequestContext.post() got an unexpected keyword argument 'token'", "trace": "api_context = <playwright._impl._fetch.APIRequestContext object at 0x000001C98DC1C830>\n\n    @pytest.mark.api\n    def test_login_invalid_credentials(api_context):\n        login_api = LoginAPI(api_context)\n>       response = login_api.login(\n            username=\"invaliduser\",\n            password=\"wrongpass\",\n            expiresInMins=30\n        )\n\ntest_login.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\api\\users_api.py:22: in login\n    return self.post(self.base_endpoint, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <api.users_api.LoginAPI object at 0x000001C98DB7E350>, endpoint = '/auth/login'\ndata = {'expiresInMins': 30, 'password': 'wrongpass', 'username': 'invaliduser'}, token = None\n\n    def post(self, endpoint: str, data: dict, token: str = None):\n>       return self.context.post(endpoint, data=data, token=token)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       TypeError: APIRequestContext.post() got an unexpected keyword argument 'token'\n\n..\\api\\api_client.py:9: TypeError"}, "start": 1758625878389, "stop": 1758625878389, "uuid": "8a9b343d-ba6e-4ed0-9b7e-4d9d896ec1fe", "historyId": "ba4e553d88338b4c3aa782986d363389", "testCaseId": "ba4e553d88338b4c3aa782986d363389", "fullName": "tests.test_login#test_login_invalid_credentials", "labels": [{"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "PC-2993"}, {"name": "thread", "value": "3188-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py"]}